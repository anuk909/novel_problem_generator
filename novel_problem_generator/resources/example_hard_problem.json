{"task_id": "hard/0", "prompt": "def product_of_primes(numbers):\n    \"\"\"\n    Write a function that takes a list of integers and returns the product of all the prime numbers in the list. A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.\n\n    For example, if the input is [2, 3, 4, 5, 6, 7, 8, 9, 10], the output should be 210 because the prime numbers in the list are 2, 3, 5, and 7, and their product is 2 * 3 * 5 * 7 = 210.\n\n    Note:\n    - If the input list is empty, return 1 (the product of an empty set of numbers is 1).\n    - The input list may contain duplicate numbers, but you should only consider each unique number once.\n    \"\"\"\n", "canonical_solution": "    is_prime = lambda n: n > 1 and all(n % i != 0 for i in range(2, int(n ** 0.5) + 1))\n    primes = [n for n in set(numbers) if is_prime(n)]\n    result = 1\n    for p in primes:\n        result *= p\n    return result", "test": "def check(candidate):\n    assert candidate([2, 3, 4, 5, 6, 7, 8, 9, 10]) == 210\n    assert candidate([]) == 1\n    assert candidate([3, 4, 5, 6, 7, 8, 9, 10, 11]) == 1155\n    assert candidate([2, 4, 6, 8, 10]) == 2\n    assert candidate([3, 7, 2, 4]) == 42", "entry_point": "product_of_primes"}